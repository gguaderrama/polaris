import React from 'react'
import { connect } from 'react-redux'
import Perfil from '../components/perfil'
import {
    setTabPerfil,
    setNombrePerfil,
    setApellidosPerfil,
    setNicknamePerfil,
    setTelefonoPerfil,
    setTallaPerfil,
    setCorreoPerfil,
    setPassPerfil,
    setConfirmarPerfil,
    setMensajePerfil,
    setMensajeConfirmaPerfil,
    setLogged,
    editarPerfil,
    setCardVerification,
    setCardNumber,
    setExpYear,
    setExpMonth,
    setCardHolder,
    setCardProvider,
    saveMetodoPago,
    getMetodoPago,
    setMenu,
    navigate,
    recoverShoppingCart,
    getHistorialCompras,
    getDetalleCompra,
    setDetalleHistorialCompras,
    deleteMetodoPago,
    setAlerta,
    setAlertChangePass,
    recoverPassword,
    formatCardNumber,
    getProximasPerfil,
    getPasadasPerfil,
    setLoadingPasadasPerfil,
    setLoadingProximasPerfil,
    setAlertCancelSchedule,
    cancelSchedule,
    cleanAll,
    setModalAvatar,
    setAvatarFile,
    saveAvatarPerfil,
    clearAvatarFile,
    setAvatarFileCamera,
    setFaceFile,
    saveFacePerfil,
    clearFaceFile,
    setFaceFileCamera,
    getFacePerfil,
    setModalFace,
    setRfcPerfil,
    setDateCalendarProximas,
    setDateCalendarPasadas,
    setValidModalFace
} from '../actions'

const mapState = state => {
    document.title = 'Load | Perfil'
    return {
        visible: state.navigation.visible,
        logged: state.navigation.logged,
        active: state.perfil.active,
        consulta: state.perfil.consulta,
        tabs: state.perfil.tabs,
        tab: state.perfil.tab,
        nickname: state.perfil.nickname,
        nombre: state.perfil.nombre,
        apellidos: state.perfil.apellidos,
        telefono: state.perfil.telefono,
        talla: state.perfil.talla,
        tallas: state.perfil.tallas,
        correo: state.perfil.correo,
        pass: state.perfil.pass,
        confirmar: state.perfil.confirmar,
        mensaje: state.perfil.mensaje,
        mensajeconfirma: state.perfil.mensajeconfirma,
        modal: state.perfil.modal,
        modalFace: state.perfil.modalFace,
        card_verification_length: state.pagos.card_verification_length,
        expYear: state.pagos.expYear,
        expMonth: state.pagos.expMonth,
        metodos: state.pagos.metodos,
        compras: state.comprar.compras,
        detalleHistorialCompras: state.perfil.detalleHistorialCompras,
        detalleCompra: state.perfil.detalleCompra,
        alerta: state.alerta.alerta,
        alert_change_pass: state.perfil.alert_change_pass,
        dateProximas: state.perfil.dateProximas,
        datePasadas: state.perfil.datePasadas,
        proximas: state.perfil.proximas,
        pasadas: state.perfil.pasadas,
        loadingProximas: state.perfil.loadingProximas,
        loadingPasadas: state.perfil.loadingPasadas,
        avatar: state.perfil.avatar,
        face: state.perfil.face,
        registrando: state.pagos.registrando,
        avatarLoading: state.perfil.avatarLoading,
        faceLoading: state.perfil.faceLoading,
        cardVerification: state.pagos.cardVerification,
        card_provider: state.pagos.card_provider,
        card_holder: state.pagos.card_holder,
        message_card_holder: state.pagos.message_card_holder,
        valid_card_holder: state.pagos.valid_card_holder,
        card_number: state.pagos.card_number,
        message_card_number: state.pagos.message_card_number,
        valid_card_number: state.pagos.valid_card_number,
        max_card_number: state.pagos.max_card_number,
        valid_card_verification: state.pagos.valid_card_verification,
        message_card_verification: state.pagos.message_card_verification,
        alert_cancel_schedule: state.booking.alert_cancel_schedule,
        avatarType: state.perfil.avatarType,
        avatarData: state.perfil.avatarData,
        faceType: state.perfil.faceType,
        faceData: state.perfil.faceData,
        rfc: state.perfil.rfc,
        valid_telefono: state.perfil.valid_telefono,
        message_telefono: state.perfil.message_telefono,
        valid_nickname: state.perfil.valid_nickname,
        message_nickname: state.perfil.message_nickname,
        validModalFace: state.perfil.validModalFace,
        uploadProgressAvatar: state.perfil.uploadProgressAvatar,
        conekta_count: state.pagos.conekta_count
    }
}

const mapDispatch = dispatch => {
    dispatch(cleanAll())
    dispatch(setMenu(false))
    dispatch(setLogged())
    dispatch(getFacePerfil())
    return {
        setTabPerfil: tab => dispatch(setTabPerfil(tab)),
        setNombrePerfil: event => dispatch(setNombrePerfil(event)),
        setApellidosPerfil: event => dispatch(setApellidosPerfil(event)),
        setRfcPerfil: event => dispatch(setRfcPerfil(event)),
        setNicknamePerfil: event => dispatch(setNicknamePerfil(event)),
        setTelefonoPerfil: event => dispatch(setTelefonoPerfil(event)),
        setTallaPerfil: event => dispatch(setTallaPerfil(event)),
        setCorreoPerfil: event => dispatch(setCorreoPerfil(event)),
        setPassPerfil: event => dispatch(setPassPerfil(event)),
        setConfirmarPerfil: event => dispatch(setConfirmarPerfil(event)),
        setMensajePerfil: event => dispatch(setMensajePerfil(event)),
        setMensajeConfirmaPerfil: event =>
            dispatch(setMensajeConfirmaPerfil(event)),
        editarPerfil: () => dispatch(editarPerfil()),
        setModalAvatar: val => dispatch(setModalAvatar(val)),
        setModalFace: val => dispatch(setModalFace(val)),
        setCardVerification: event => dispatch(setCardVerification(event)),
        setCardNumber: event => dispatch(setCardNumber(event)),
        setExpYear: event => dispatch(setExpYear(event)),
        setExpMonth: event => dispatch(setExpMonth(event)),
        setCardHolder: event => dispatch(setCardHolder(event)),
        setCardProvider: event => dispatch(setCardProvider(event)),
        saveMetodoPago: () => dispatch(saveMetodoPago()),
        navigate: val => dispatch(navigate(val)),
        getHistorialCompras: () => dispatch(getHistorialCompras()),
        getDetalleCompra: compra => dispatch(getDetalleCompra(compra)),
        setDetalleHistorialCompras: val =>
            dispatch(setDetalleHistorialCompras(val)),
        getMetodoPago: () => dispatch(getMetodoPago()),
        setAlerta: () => dispatch(setAlerta()),
        deleteMetodoPago: id => dispatch(deleteMetodoPago(id)),
        setAlertChangePass: () => dispatch(setAlertChangePass()),
        recoverPassword: () => dispatch(recoverPassword()),
        formatCardNumber: event => dispatch(formatCardNumber(event)),
        getProximasPerfil: () => dispatch(getProximasPerfil()),
        getPasadasPerfil: () => dispatch(getPasadasPerfil()),
        setLoadingProximasPerfil: val =>
            dispatch(setLoadingProximasPerfil(val)),
        setLoadingPasadasPerfil: val => dispatch(setLoadingPasadasPerfil(val)),
        setAlertCancelSchedule: id => dispatch(setAlertCancelSchedule(id)),
        cancelSchedule: id => dispatch(cancelSchedule(id)),
        setAvatarFile: event => dispatch(setAvatarFile(event)),
        saveAvatarPerfil: () => dispatch(saveAvatarPerfil()),
        clearAvatarFile: () => dispatch(clearAvatarFile()),
        setAvatarFileCamera: val => dispatch(setAvatarFileCamera(val)),
        setFaceFile: event => dispatch(setFaceFile(event)),
        saveFacePerfil: () => dispatch(saveFacePerfil()),
        clearFaceFile: () => dispatch(clearFaceFile()),
        setFaceFileCamera: val => dispatch(setFaceFileCamera(val)),
        setDateCalendarProximas: val => dispatch(setDateCalendarProximas(val)),
        setDateCalendarPasadas: val => dispatch(setDateCalendarPasadas(val)),
        setValidModalFace: val => dispatch(setValidModalFace(val))
    }
}

export default connect(
    mapState,
    mapDispatch
)(Perfil)
