import React from 'react'
import { connect } from 'react-redux'
import Login from '../components/login'
import {
    setPassLogin,
    setUserLogin,
    changeFormLogin,
    setNombreRegistro,
    setApellidoRegistro,
    setCorreoRegistro,
    setFechaRegistro,
    setSexoRegistro,
    setTallaRegistro,
    setActivacionRegistro,
    setEstudiosRegistro,
    setOcupacionRegistro,
    changeFormIntereses,
    setClaseReserva,
    setInstructorReserva,
    setSucursalReserva,
    login,
    registro,
    toggleModalRegistro,
    setInteresesRegistro,
    setNicknameRegistro,
    getInteresesRegistro,
    setMensajeNombreLogin,
    setMensajeApellidoLogin,
    setMensajeCorreoLogin,
    enterPassLogin,
    setAceptoRegistro,
    setAceptoCargo,
    cleanAll,
    setForgotPassword,
    setForgotEmail,
    sendForgotPassword,
    toggleModalForgotPassword,
    setValidIntereses
} from '../actions'

const mapState = state => {
    document.title = 'Load | Login'
    return {
        active: state.login.active,
        visible: state.navigation.visible,
        user: state.login.user,
        pass: state.login.pass,
        registrate: state.login.registrate,
        nombre: state.login.nombre,
        apellido: state.login.apellido,
        correo: state.login.correo,
        correo_alert: state.login.correo_alert,
        fecha: state.login.fecha,
        sexo: state.login.sexo,
        talla: state.login.talla,
        tallas: state.login.tallas,
        activacion: state.login.activacion,
        estudios: state.login.estudios,
        ocupacion: state.login.ocupacion,
        intereses: state.login.intereses,
        registrate: state.login.registrate,
        consulta: state.login.consulta,
        clase: state.login.clase,
        instructor: state.login.instructor,
        sucursal: state.login.sucursal,
        modal: state.login.modal,
        interests: state.login.interests,
        opciones: state.login.opciones,
        activaciones: state.login.activaciones,
        estudios: state.login.estudios,
        ocupaciones: state.login.ocupaciones,
        nickname: state.login.nickname,
        message_user_login: state.login.message_user_login,
        message_pass_login: state.login.message_pass_login,
        message_name_registration: state.login.message_name_registration,
        message_surname_registration: state.login.message_surname_registration,
        message_nickname_registration:
            state.login.message_nickname_registration,
        message_email_registration: state.login.message_email_registration,
        message_birth_registration: state.login.message_birth_registration,
        valid_user_login: state.login.valid_user_login,
        valid_pass_login: state.login.valid_pass_login,
        valid_name_registration: state.login.valid_name_registration,
        valid_surname_registration: state.login.valid_surname_registration,
        valid_nickname_registration: state.login.valid_nickname_registration,
        valid_email_registration: state.login.valid_email_registration,
        valid_birth_registration: state.login.valid_birth_registration,
        acepto: state.login.acepto,
        forgot_password: state.login.forgot_password,
        forgot_email: state.login.forgot_email,
        valid_forgot_email: state.login.valid_forgot_email,
        message_forgot_email: state.login.message_forgot_email,
        query_forgot_password: state.login.query_forgot_password,
        modal_forgot_password: state.login.modal_forgot_password,
        valid_message_form: state.login.valid_message_form,
        valid_message: state.login.valid_message,
        valid_message_sexo: state.login.valid_message_sexo,
        valid_sexo: state.login.valid_sexo,
        valid_message_correo: state.login.valid_message_correo,
        message_name: state.login.message_name,
        message_surname: state.login.message_surname,
        valid_interes: state.login.valid_interes
    }
}

const mapDispatch = dispatch => {
    sessionStorage.clear()
    dispatch(cleanAll())
    dispatch(getInteresesRegistro())
    return {
        login: () => dispatch(login()),
        registro: () => dispatch(registro()),
        setPassLogin: event => dispatch(setPassLogin(event)),
        setUserLogin: event => dispatch(setUserLogin(event)),
        changeFormLogin: () => dispatch(changeFormLogin()),
        setNombreRegistro: event => dispatch(setNombreRegistro(event)),
        setApellidoRegistro: event => dispatch(setApellidoRegistro(event)),
        setCorreoRegistro: event => dispatch(setCorreoRegistro(event)),
        setCorreoAlert: event => dispatch(setCorreoAlerta(event)),
        setFechaRegistro: date => dispatch(setFechaRegistro(date)),
        setSexoRegistro: event => dispatch(setSexoRegistro(event)),
        setTallaRegistro: event => dispatch(setTallaRegistro(event)),
        setActivacionRegistro: event => dispatch(setActivacionRegistro(event)),
        setEstudiosRegistro: event => dispatch(setEstudiosRegistro(event)),
        setOcupacionRegistro: event => dispatch(setOcupacionRegistro(event)),
        setClaseReserva: event => dispatch(setClaseReserva(event)),
        setInstructorReserva: event => dispatch(setInstructorReserva(event)),
        setSucursalReserva: event => dispatch(setSucursalReserva(event)),
        changeFormIntereses: () => dispatch(changeFormIntereses()),
        toggleModalRegistro: () => dispatch(toggleModalRegistro()),
        setInteresesRegistro: val => dispatch(setInteresesRegistro(val)),
        setNicknameRegistro: event => dispatch(setNicknameRegistro(event)),
        setMensajeNombreLogin: event => dispatch(setMensajeNombreLogin(event)),
        setMensajeApellidoLogin: event =>
            dispatch(setMensajeApellidoLogin(event)),
        setMensajeCorreoLogin: event => dispatch(setMensajeCorreoLogin(event)),
        enterPassLogin: event => dispatch(enterPassLogin(event)),
        setAceptoRegistro: value => dispatch(setAceptoRegistro(value)),
        setAceptoCargo: event => dispatch(setAceptoCargo(event)),
        setForgotPassword: () => dispatch(setForgotPassword()),
        setForgotEmail: event => dispatch(setForgotEmail(event)),
        sendForgotPassword: () => dispatch(sendForgotPassword()),
        toggleModalForgotPassword: () => dispatch(toggleModalForgotPassword()),
        setValidIntereses: () => dispatch(setValidIntereses())
    }
}

export default connect(
    mapState,
    mapDispatch
)(Login)
